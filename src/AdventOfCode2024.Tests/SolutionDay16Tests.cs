using NUnit.Framework;

namespace AdventOfCode2024.Day16.Tests;

public static class SolutionDay16Tests
{
	[Test]
	public static void Part1Small()
	{
		var input =
			"""
			###############
			#.......#....E#
			#.#.###.#.###.#
			#.....#.#...#.#
			#.###.#####.#.#
			#.#.#.......#.#
			#.#.#####.###.#
			#...........#.#
			###.#.#####.#.#
			#...#.....#.#.#
			#.#.#.###.#.#.#
			#.....#...#.#.#
			#.###.#.#.#.#.#
			#S..#.....#...#
			###############
			""";

		Assert.That(SolutionDay16.RunPart1([.. input.Split(Environment.NewLine)]), Is.EqualTo(7_036L));
	}

	[Test]
	public static void Part1Large()
	{
		var input =
			"""
			#################
			#...#...#...#..E#
			#.#.#.#.#.#.#.#.#
			#.#.#.#...#...#.#
			#.#.#.#.###.#.#.#
			#...#.#.#.....#.#
			#.#.#.#.#.#####.#
			#.#...#.#.#.....#
			#.#.#####.#.###.#
			#.#.#.......#...#
			#.#.###.#####.###
			#.#.#...#.....#.#
			#.#.#.#####.###.#
			#.#.#.........#.#
			#.#.#.#########.#
			#S#.............#
			#################
			""";

		Assert.That(SolutionDay16.RunPart1([.. input.Split(Environment.NewLine)]), Is.EqualTo(11_048L));
	}

	// The next two tests come from:
	// https://gist.github.com/fizbin/9d004b4f9a54a51957d51155019cc0d6
	[Test]
	public static void Part1Check1()
	{
		var input =
			"""
			###########################
			#...#...#...#...#...#...#E#
			#.#.#.#.#.#.#.#.#.#.#.#.#.#
			#...#.#.#.#.#.#.#.#.#.#.#.#
			#.###.#.#.#.#.#.#.#.#.#.#.#
			#...#.#.#.#.#.#.#.#.#.#.#.#
			#.#.#.#.#.#.#.#.#.#.#.#.#.#
			#.#.#.#.#.#.#.#.#.#.#.#.#.#
			#.#.#.#.#.#.#.#.#.#.#.#.#.#
			#.#.#.#.#.#.#.#.#.#.#.#.#.#
			#.#.#.#.#.#.#.#.#.#.#.#.#.#
			#.#.#.#.#.#.#.#.#.#.#.#.#.#
			#.#.#.#.#.#.#.#.#.#.#.#.#.#
			#.#.#.#.#.#.#.#.#.#.#.#.#.#
			#.#.#.#.#.#.#.#.#.#.#.#.#.#
			#S#...#...#...#...#...#...#
			###########################
			""";

		Assert.That(SolutionDay16.RunPart1([.. input.Split(Environment.NewLine)]), Is.EqualTo(25_198L));
	}

	[Test]
	public static void Part1Check2()
	{
		var input =
			"""
			###########################
			#...#...#...#...#...#...#E#
			#.#.#.#.#.#.#.#.#.#.#.#.#.#
			#...#.#.#.#.#.#.#.#.#.#.#.#
			#.#.#.#.#.#.#.#.#.#.#.#.#.#
			#...#.#.#.#.#.#.#.#.#.#.#.#
			#.#.#.#.#.#.#.#.#.#.#.#.#.#
			#.#.#.#.#.#.#.#.#.#.#.#.#.#
			#.#.#.#.#.#.#.#.#.#.#.#.#.#
			#.#.#.#.#.#.#.#.#.#.#.#.#.#
			#.#.#.#.#.#.#.#.#.#.#.#.#.#
			#.#.#.#.#.#.#.#.#.#.#.#.#.#
			#.#.#.#.#.#.#.#.#.#.#.#.#.#
			#.#.#.#.#.#.#.#.#.#.#.#.#.#
			#.#.#.#.#.#.#.#.#.#.#.#.#.#
			#S#...#...#...#...#...#...#
			###########################
			""";

		Assert.That(SolutionDay16.RunPart1([.. input.Split(Environment.NewLine)]), Is.EqualTo(25_198L));
	}

	[Test]
	public static void Part2Small()
	{
		var input =
			"""
			###############
			#.......#....E#
			#.#.###.#.###.#
			#.....#.#...#.#
			#.###.#####.#.#
			#.#.#.......#.#
			#.#.#####.###.#
			#...........#.#
			###.#.#####.#.#
			#...#.....#.#.#
			#.#.#.###.#.#.#
			#.....#...#.#.#
			#.###.#.#.#.#.#
			#S..#.....#...#
			###############
			""";

		Assert.That(SolutionDay16.RunPart2([.. input.Split(Environment.NewLine)]), Is.EqualTo(45));
	}

	[Test]
	public static void Part2Large()
	{
		var input =
			"""
			#################
			#...#...#...#..E#
			#.#.#.#.#.#.#.#.#
			#.#.#.#...#...#.#
			#.#.#.#.###.#.#.#
			#...#.#.#.....#.#
			#.#.#.#.#.#####.#
			#.#...#.#.#.....#
			#.#.#####.#.###.#
			#.#.#.......#...#
			#.#.###.#####.###
			#.#.#...#.....#.#
			#.#.#.#####.###.#
			#.#.#.........#.#
			#.#.#.#########.#
			#S#.............#
			#################
			""";

		Assert.That(SolutionDay16.RunPart2([.. input.Split(Environment.NewLine)]), Is.EqualTo(64));
	}
}